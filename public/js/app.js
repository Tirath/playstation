"use strict";var app = app || {};  // everything in app namespaceapp.currentPage = 0;/* * handles onsubmit for search box */app.searchGames = function () {	app.currentPage = 1;	app.message.style.display = app.constants.hide;	return app.getGames(escape(document.getElementById("search-box").value.trim()), false);};/* * handles previous page call */app.navigatePreviousGames = function () {	app.previousImage.blur();	if (!app.dataInProgress) {		--app.currentPage;		app.getGames(false, app.data._links.prev);	}	return false;};/* * handles next page call */app.navigateNextGames = function () {	app.nextImage.blur();	if (!app.dataInProgress) {		++app.currentPage;		app.getGames(false, app.data._links.next);	}	return false;};/* * jsonp response callback function - publishes that the data has been received for all the subscribers */app.response = function (data) {	app.dataInProgress = false;  // data received	clearTimeout(app.jsonpTimer);  // get rid of error timer	app.ps.publish("onData", data);  // publishes to exec multiple callback functions (currently only 1)};app.setGames = function (data) {	var constants = app.constants,		total;	app.ps.unsubscribe("onData", app.setGames);  // unsubscribes as the setGames has already been executed	app.data = data;	total = data ? data._total : 0;	document.body.removeChild(app.script);  // remove the script tag		// something went wrong	if (!total) {		app.results.style.display = constants.hide;		app.errorMessage.style.display 	= constants.show;		return;	}	app.errorMessage.style.display 	= constants.hide;	app.results.style.display = constants.show;	app.currentPage = total ? app.currentPage : total;  // check if streams available		app.disableButtons(total);		app.totalResults.textContent = total;	app.navigationNumber.textContent = app.getNavigationNumber(total);	app.renderList(data);};/* * Renders the list. Create new row node and replaces the existing one */app.renderList = function (data) {	var constants = app.constants,		newWindow = "_blank",		description, currentStream, gameLink;	var message = ["Game name - ", "The game, ", ", was created at ", " and has been viewed by ", "."],		classes = ["game-results", "game-image", "game-data", "game-row"];	for (var i = 0; i < 5; i++) {		var	image 		= document.createElement(constants.img),			a 			= document.createElement(constants.a),			p 			= document.createElement(constants.p),			span		= document.createElement(constants.span),			div			= document.createElement(constants.div),			li 			= document.createElement(constants.li),			docFragment = document.createDocumentFragment(),			list 		= document.getElementById(classes[0]);					currentStream = data.streams[i];		if (currentStream) {			image.src = currentStream.preview.medium;			image.className = classes[1];			span.textContent = message[0] + currentStream.channel.display_name;			description = message[1] + currentStream.channel.game + message[2] + currentStream.created_at + message[3] + currentStream.viewers + message[4];			p.textContent = description;			div.appendChild(span);			div.appendChild(p);			div.className = classes[2];			a.href = currentStream.channel.url;			a.target = newWindow;			a.appendChild(image);			a.appendChild(div);						li.className = classes[3];			li.appendChild(a);		}    	    	docFragment.appendChild(li);    	list.replaceChild(docFragment, list.childNodes[i]);	}};/* * On response, enables or disables the pagination buttons based on the page availability */app.disableButtons = function (total) {	app.previousImage.disabled = !app.data._links.prev;	app.nextImage.disabled = app.currentPage === Math.ceil(total/5);};/* * Prepares the UI for pagination */app.getNavigationNumber = function (total) {	return app.currentPage + "/" + Math.ceil(total/5);};